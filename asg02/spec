Reliable UDP

-Corrupted packets

-Dropped packets

-Stop-n-wait protocol

-Library (application layer?)

-One way data communication (receiver canâ€™t send data back, only control info)

-MTU = 1500 bytes

-Limited Retries



Two Main Functions:

rdt.send(int fd, char *buf, size_t size);

| Ck Sum | Seq # | Payload (buf) |



rdt_recv(int fd, char *buf, size_t size);  //returns number of bytes read



Implement internet checksum. Take the buffer, pad it to even 16 bit value (divisible by word size of 2), look at each character, treat it as a number, and add them all up, take the overflow if there is any and take the high order word or the low order word and take the inverse of that.



-Have to implement a way to corrupt packets, have to have sender or receiver drop some packets, in order to test reliability.



instead of calling stream socket call datagram socket to create a udp based socket